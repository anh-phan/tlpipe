# -*- mode: python; -*-

# input file for pipeline manager
# execute this pipeline by either command of the following two:
# tlpipe dir/to/cyl_rfi.pipe
# mpiexec -n N tlpipe dir/to/cyl_rfi.pipe


pipe_tasks = []
pipe_outdir = './output_rfi/'
pipe_logging = 'notset'
# pipe_logging = 'info'
pipe_timing = True
pipe_flush = True


import glob
data_dir1 = '/node3_disk/disk1/20160927201537_122hrhdf5_part1'
data_dir2 = '/node3_disk/disk2/20160927201537_122hrhdf5_part2'
data_dir3 = '/node3_disk/disk3/20160927201537_122hrhdf5_part3'
data_dir4 = '/node3_disk/disk4/20160927201537_122hrhdf5_part4'
data_dir5 = '/node3_disk/disk5/20160927201537_122hrhdf5_part5'
files1 = sorted(glob.glob(data_dir1+'/*.hdf5'))
files2 = sorted(glob.glob(data_dir2+'/*.hdf5'))
files3 = sorted(glob.glob(data_dir3+'/*.hdf5'))
files4 = sorted(glob.glob(data_dir4+'/*.hdf5'))
files5 = sorted(glob.glob(data_dir5+'/*.hdf5'))
# files = files1 + files2 + files3 + files4 + files5
# files = files1 + files2 + files3
# files = [ files1[:3],  files2[:5], files3[:4] ]
# files = files1[:3]
# files = files1[96]
# files = files1[:10]
# files = files1
files = files2[:10]
# files = files2[10:11]


from tlpipe.timestream import dispatch
pipe_tasks.append(dispatch.Dispatch)
### parameters for Dispatch
dp_input_files = files
dp_freq_select = (216, 792) # all used freqs
# dp_feed_select = [11, 12, 13, 14, 42, 43, 44, 45, 74, 75, 76, 78]
dp_feed_select = [11, 12, 18, 42, 43, 44, 45, 74, 75, 76, 78]
dp_extra_inttime = 0
dp_exclude_bad = False
# dp_iterable = True
dp_iter_num = 1
dp_tag_input_iter = False
dp_out = 'dp'

from tlpipe.timestream import detect_ns
pipe_tasks.append(detect_ns.Detect)
### parameters for Detect
dt_in = dp_out
# dt_feed = 1
# dt_iterable = True
dt_mask_near = 0
dt_out = 'dt'

from tlpipe.plot import plot_slice
pipe_tasks.append(plot_slice.Plot)
### parameters for Plot
psl_in = dt_out
# psl_iterable = True
psl_plot_type = 'freq'
psl_slices = 1
psl_flag_mask = True
psl_flag_ns = True
psl_fig_name = 'slice_freq/slice'
# psl_feed_no = True
psl_out = 'psl'

from tlpipe.plot import plot_slice
pipe_tasks.append((plot_slice.Plot, 'psl1_'))
### parameters for Plot
psl1_in = dt_out
# psl1_iterable = True
psl1_plot_type = 'time'
psl1_slices = 1
psl1_flag_mask = True
psl1_flag_ns = True
psl1_fig_name = 'slice_time/slice'
# psl1_feed_no = True
psl1_out = 'psl1'

from tlpipe.plot import plot_waterfall
pipe_tasks.append(plot_waterfall.Plot)
### parameters for Plot
pwf_in = dt_out
# pwf_iterable = True
pwf_flag_mask = True
pwf_flag_ns = True
pwf_abs_only = True
pwf_gray_color = True
# pwf_transpose = True
pwf_y_axis = 'time'
pwf_fig_name = 'rvis/vis'
# pwf_feed_no = True
pwf_out = 'pwf'

from tlpipe.timestream import rfi_flagging
pipe_tasks.append(rfi_flagging.Flag)
### parameters for Flag
rf_in = dt_out
# rf_iterable = True
rf_show_progress = True
rf_process_timing = True
rf_first_threshold = 6.0
rf_tk_size = 1.0
rf_fk_size = 3.0
# rf_distribution = 'Gaussian'
rf_out = 'rf'

from tlpipe.plot import plot_waterfall
pipe_tasks.append((plot_waterfall.Plot, 'pwf1_'))
### parameters for Plot
pwf1_in = rf_out
# pwf1_iterable = True
pwf1_flag_mask = True
pwf1_flag_ns = True
pwf1_abs_only = True
pwf1_gray_color = True
pwf1_color_flag = True
# pwf1_transpose = True
pwf1_fig_name = 'rvis_flag/vis'
# pwf1_feed_no = True
pwf1_out = 'pwf1'

from tlpipe.timestream import rfi_stats
pipe_tasks.append(rfi_stats.Stats)
### parameters for Stats
rs_in = rf_out
# rs_iterable = True
rs_excl_auto = True
rs_fig_name = 'stats_flag/stats'
rs_out = 'rs'


from tlpipe.timestream import rt2ts
pipe_tasks.append(rt2ts.Rt2ts)
### parameters for Rt2ts
r2t_in = rf_out
# r2t_iterable = True
r2t_out = 'r2t'

from tlpipe.timestream import combine_mask
pipe_tasks.append(combine_mask.Combine)
### parameters for Combine
cm_in = r2t_out
# cm_iterable = True
cm_out = 'cm'

from tlpipe.plot import plot_waterfall
pipe_tasks.append((plot_waterfall.Plot, 'pwf2_'))
### parameters for Plot
pwf2_in = cm_out
# pwf2_iterable = True
pwf2_flag_mask = True
pwf2_flag_ns = True
pwf2_abs_only = True
pwf2_gray_color = True
pwf2_color_flag = True
pwf2_fig_name = 'vis_combine/vis'
pwf2_out = 'pwf2'

from tlpipe.timestream import sir_operate
pipe_tasks.append(sir_operate.Sir)
### parameters for Sir
sir_in = cm_out
# sir_iterable = True
sir_eta = 0.2
# sir_output_files = [ 'sir/sir_file.hdf5' ]
sir_out = 'sir'

from tlpipe.plot import plot_waterfall
pipe_tasks.append((plot_waterfall.Plot, 'pwf3_'))
### parameters for Plot
pwf3_in = sir_out
# pwf3_iterable = True
pwf3_flag_mask = True
pwf3_flag_ns = True
pwf3_abs_only = True
pwf3_gray_color = True
pwf3_color_flag = True
pwf3_fig_name = 'vis_sir/vis'
pwf3_out = 'pwf3'

from tlpipe.timestream import rfi_stats
pipe_tasks.append((rfi_stats.Stats, 'rs1_'))
### parameters for Stats
rs1_in = sir_out
# rs1_iterable = True
# rs1_input_files = sir_output_files
rs1_excl_auto = True
rs1_fig_name = 'stats_sir/stats'
rs1_out = 'rs1'
